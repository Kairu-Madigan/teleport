#!groovy
pipeline {
    agent any
    options {
        ansiColor(colorMapName: 'XTerm')
        disableConcurrentBuilds()
        timestamps()
    }
    stages {
        stage('Create files/build directory') {
            steps {
                dir('assets/marketplace') {
                    sh 'mkdir -p files/build'
                }
            }
        }
        stage('Run Packer') {
            steps {
                dir('assets/marketplace') {
                    sh 'make oss'
                }
            }
        }
        stage('Update AMI IDs)') {
            steps {
                dir('assets/marketplace') {
                    sh 'make update-ami-ids-oss'
                }
            }
        }
        stage('Run Cloudformation and wait for stack') {
            environment {
                BASE_JENKINS_CLOUDFORMATION_PARAMETERS = credentials('7d731ad8-ed03-4e42-a411-605c40c182f6')
            }
            steps {
                dir('assets/marketplace') {
                    sh 'make jenkins-create-stack-vpc'
                    sh 'make jenkins-wait-for-stack-creation-vpc'
                    // get VPC stack outputs as a JSON list of {ParameterKey: key, ParameterValue: value} pairs
                    // write this to vpc.json
                    sh "make jenkins-describe-stack-outputs-vpc | jq -r 'map ( { ParameterKey: ( .OutputKey | tostring ), ParameterValue: ( .OutputValue | tostring) } )' > vpc.json"
                    // use jq to combine Jenkins JSON stack parameters and vpc.json into one list of pairs
                    sh "jq -s add ${BASE_JENKINS_CLOUDFORMATION_PARAMETERS} vpc.json > full-parameters.json"
                    sh "cat full-parameters.json"
                    // update path to parameters file and create ASG stack
                    sh 'JENKINS_CLOUDFORMATION_PARAMETERS_PATH=full-parameters.json make jenkins-create-stack'
                    sh 'make jenkins-wait-for-stack-creation'
                }
            }
        }
        stage('Wait for Teleport Web UI to come up') {
            steps {
                timeout(5) {
                    waitUntil {
                        script {
                            def r = sh script: 'wget -q https://jenkins-teleport-quickstart-test-stack.gravitational.io/web/login', returnStatus: true
                            return (r == 0);
                        }
                    }
                }
            }
        }
    }
    //post {
    //    always {
    //        dir('assets/marketplace') {
    //            script {
    //                // we want to run all these shutdown steps in order regardless of success/failure (in case part of the ASG fails)
    //                // so we use '|| true' to suppress return codes > 0
    //                sh 'make jenkins-delete-stack || true'
    //                sh 'make jenkins-wait-for-stack-deletion || true'
    //                sh 'make jenkins-delete-stack-vpc || true'
    //                sh 'make jenkins-wait-for-stack-deletion-vpc || true'
    //            }
    //        }            
    //    }
    //}
}
